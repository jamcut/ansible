---
#### Ansible playbook to configure a new attack box
# Author: @jamcut
# Version: 0.2
# Overview: Playbook to install some common attack tools on a fresh box
# Notes: Run this playbook with the "--ask-become-pass" switch which 
#        will prompt you for a sudo password to do things as root.
#
#        The "hosts" and "remote_user" parameters as well as all
#        of the variables will need to be set before running.
# To Do: Nmap
#        Other pip packages
#        Add additional tools
#        Separate into modules
####

- name: Configure New Attack Box
  hosts: tests
  remote_user: jamcut
  vars:
    tool_install_path: "/tmp/Tools/"
    empire_staging_key: "RANDOM"
    msf_db_name: msf
    msf_db_user: msf
    msf_db_pass: msf
    remote_user_account: jamcut

  handlers:

  - name: "Start PostgreSQL"
    become: yes
    become_method: sudo
    service: name=postgresql state=started

  tasks:

    # Update apt cache and software packages

    - name: "Update apt cache"
      become: yes
      become_method: sudo
      apt:
        update_cache: "yes"
    - name: "Update software packages"
      become: yes
      become_method: sudo
      apt:
        upgrade: "dist"

    # Install stuff from apt

    - name: "Install Packages"
      become: yes
      become_method: sudo
      action: apt name={{ item }} state=latest
      with_items:
        - git
        - python-pip
        - postgresql
        - libpq-dev
        - python-psycopg2
        - subversion
        - autoconf
        - terminator

    # Install misc tools from git

    - name: "Install recon-ng"
      git:
        repo: "https://bitbucket.org/LaNMaSteR53/recon-ng.git"
        dest: "{{ tool_install_path }}recon-ng/"

    - name: "Install sqlmap"
      git:
        repo: "https://github.com/sqlmapproject/sqlmap.git"
        dest: "{{ tool_install_path }}sqlmap/"

    - name: "Install nikto"
      git:
        repo: "https://github.com/sullo/nikto.git"
        dest: "{{ tool_install_path }}nikto/"

    - name: "Install Responder"
      git:
        repo: "https://github.com/SpiderLabs/Responder.git"
        dest: "{{ tool_install_path }}Responder/"

    - name: "Clone King Phisher"
      git:
        repo: "https://github.com/securestate/king-phisher.git"
        dest: "{{ tool_install_path }}king-phisher/"
        version: dev

    # Install additional packages for KP

    - name: "Install GEOS and Basemap with apt"
      become: yes
      become_method: sudo
      action: apt name={{ item }} state=latest
      with_items:
        - libgeos++-dev
        - python-mpltoolkits.basemap

    - name: "Run King Phisher Install Script"
      become: yes
      become_method: sudo
      shell: "{{ tool_install_path }}king-phisher/tools/install.sh -y --skip-server"

    # Install PowerShell tools

    - name: "Install PowerShell Empire"
      git:
        repo: "https://github.com/PowerShellEmpire/Empire.git"
        dest: "{{ tool_install_path }}Empire/"

    - name: "Set up PowerShell Empire"
      shell: "STAGING_KEY={{ empire_staging_key }} yes | {{ tool_install_path }}Empire/setup/install.sh"

    - name: "Install PowerSploit"
      git:
        repo: "https://github.com/PowerShellMafia/PowerSploit.git"
        dest: "{{ tool_install_path }}PowerSploit/"

    - name: "Install PowerTools"
      git:
        repo: "https://github.com/PowerShellEmpire/PowerTools.git"
        dest: "{{ tool_install_path }}PowerTools/"

    - name: "Install PoshSec"
      git:
        repo: "https://github.com/PoshSec/PoshSec.git"
        dest: "{{ tool_install_path }}PoshSec/"

    # Install pip modules

    - name: "Install AdvancedHTTPServer"
      become: yes
      become_method: sudo
      pip: name=AdvancedHTTPServer

    - name: "Install pydispatch"
      become: yes
      become_method: sudo
      pip: name=pydispatch

    # Install other tools

    # Install Nmap
    - name: "Check Out Nmap"
      subversion:
        repo: https://svn.nmap.org/nmap
        dest: "{{ tool_install_path }}nmap/"

    - name: "Configure Nmap"
      shell: "./configure"
      args:
        chdir: "{{ tool_install_path }}nmap/"

    - name: "Make Nmap"
      shell: "make"
      args:
        chdir: "{{ tool_install_path }}nmap/"

    - name: "Make Install Nmap"
      become: yes
      become_method: sudo
      shell: "make install"
      args:
        chdir: "{{ tool_install_path}}nmap/"

    # Setup PostgreSQL from task file
    - include: tasks/configure_postgresql_for_msf.yml db_name={{ msf_db_name }} db_user={{ msf_db_user }} db_pass={{ msf_db_pass }}
      notify:
        - Start PostgreSQL

     # Install and configure Metasploit
     # Using the omnibus installer and some hackery
     # Note that this will currently install MSF as root
     # Meaning that you will have to run it with sudo

     # Install PPA from BrightBox
    - name: "Install Software Properties Common"
      become: yes
      become_method: sudo
      apt:
        name: software-properties-common

    - name: "Install BrightBox PPA"
      become: yes
      become_method: sudo
      apt_repository:
        repo: ppa:brightbox/ruby-ng
        update_cache: yes

    - name: "Install MSF dependencies from apt"
      become: yes
      become_method: sudo
      action: apt name={{ item }} state=latest
      with_items:
        - ruby2.1
        - bundler
        - ruby2.1-dev
        - bison
        - flex
        - autoconf
        - automake

    # Create directories
    - name: "Create Omnibus Directory"
      become: yes
      become_method: sudo
      file:
        path: /var/cache/omnibus/
        state: directory
        owner: "{{ remote_user_account }}"

    - name: "Create MSF Framework Directory"
      become: yes
      become_method: sudo
      file:
        path: /opt/metasploit-framework/
        state: directory
        owner: "{{ remote_user_account }}"

    - name: "Configure git Username"
      become: yes
      become_method: sudo
      shell: 'git config --global user.name "nobody"'

    - name: "Configure git Email"
      become: yes
      become_method: sudo
      shell: 'git config --global user.email "nobody@example.com"'

    # Clone metasploit-omnibus repo
    - name: "Clone Metasploit Omnibus"
      git:
        repo: "https://github.com/rapid7/metasploit-omnibus.git"
        dest: "{{ tool_install_path }}metasploit-omnibus/"

    - name: "Execute Bundle Install"
      become: yes
      become_method: sudo
      shell: "bundle install --binstubs"
      args:
        chdir: "{{ tool_install_path }}metasploit-omnibus/"

    - name: "Build Metasploit Package with Omnibus"
      become: yes
      become_method: sudo
      shell: "bin/omnibus build metasploit-framework"
      args:
        chdir: "{{ tool_install_path }}metasploit-omnibus/"
        executable: /bin/bash

    - name: "Install Metasploit Package"
      become: yes
      become_method: sudo
      shell: "dpkg -i {{ tool_install_path }}metasploit-omnibus/pkg/*.deb"

    - name: "Move MSF database.yml"
      become: yes
      become_method: sudo
      shell: "cat /home/{{ remote_user_account }}/database.yml > /opt/metasploit-framework/embedded/framework/config/database.yml"
      args:
        executable: /bin/bash